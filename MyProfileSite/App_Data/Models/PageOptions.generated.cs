//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1062 with alias "pageOptions"
	/// <summary>_Page Options</summary>
	public partial interface IPageOptions : IPublishedContent
	{
		/// <summary>Menu Title</summary>
		string MenuTitle { get; }

		/// <summary>Load Content From</summary>
		IPublishedContent UmbracoInternalRedirectId { get; }

		/// <summary>Hide in Menu</summary>
		bool UmbracoNaviHide { get; }

		/// <summary>Redirect to Internal Page</summary>
		IPublishedContent UmbracoRedirect { get; }

		/// <summary>Url Alias</summary>
		string UmbracoUrlAlias { get; }

		/// <summary>Url Name</summary>
		string UmbracoUrlName { get; }
	}

	/// <summary>_Page Options</summary>
	[PublishedContentModel("pageOptions")]
	public partial class PageOptions : PublishedContentModel, IPageOptions
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pageOptions";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PageOptions(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PageOptions, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Menu Title: Overrides the default name in the menu,
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return GetMenuTitle(this); }
		}

		/// <summary>Static getter for Menu Title</summary>
		public static string GetMenuTitle(IPageOptions that) { return that.GetPropertyValue<string>("menuTitle"); }

		///<summary>
		/// Load Content From: Load the content of the selected page transparently with NO URL redirection. This is useful if you want to show the content of another page but still uses the URL of this page.  [umbracoInternalRedirectId]
		///</summary>
		[ImplementPropertyType("umbracoInternalRedirectId")]
		public IPublishedContent UmbracoInternalRedirectId
		{
			get { return GetUmbracoInternalRedirectId(this); }
		}

		/// <summary>Static getter for Load Content From</summary>
		public static IPublishedContent GetUmbracoInternalRedirectId(IPageOptions that) { return that.GetPropertyValue<IPublishedContent>("umbracoInternalRedirectId"); }

		///<summary>
		/// Hide in Menu: Hide this page from displaying in top menu
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Hide in Menu</summary>
		public static bool GetUmbracoNaviHide(IPageOptions that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }

		///<summary>
		/// Redirect to Internal Page: Redirects this page temporarily (302) to an internal page.  [umbracoRedirect]
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public IPublishedContent UmbracoRedirect
		{
			get { return GetUmbracoRedirect(this); }
		}

		/// <summary>Static getter for Redirect to Internal Page</summary>
		public static IPublishedContent GetUmbracoRedirect(IPageOptions that) { return that.GetPropertyValue<IPublishedContent>("umbracoRedirect"); }

		///<summary>
		/// Url Alias: Fill this field if you want to provide with a comma-separated list of {strong}alternate{/strong} URL for this page.  [umbracoUrlAlias]
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return GetUmbracoUrlAlias(this); }
		}

		/// <summary>Static getter for Url Alias</summary>
		public static string GetUmbracoUrlAlias(IPageOptions that) { return that.GetPropertyValue<string>("umbracoUrlAlias"); }

		///<summary>
		/// Url Name: Fill this field if you want to provide a different url name for this page.  [umbracoUrlName]
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return GetUmbracoUrlName(this); }
		}

		/// <summary>Static getter for Url Name</summary>
		public static string GetUmbracoUrlName(IPageOptions that) { return that.GetPropertyValue<string>("umbracoUrlName"); }
	}
}
