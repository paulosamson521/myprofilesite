//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Home Page</summary>
	[PublishedContentModel("homePage")]
	public partial class HomePage : PublishedContentModel, IContent, IPageOptions, ISEO, IThirdPartyScripts
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Grid
		///</summary>
		[ImplementPropertyType("grid")]
		public Skybrud.Umbraco.GridData.GridDataModel Grid
		{
			get { return Umbraco.Web.PublishedContentModels.Content.GetGrid(this); }
		}

		///<summary>
		/// Menu Title: Overrides the default name in the menu,
		///</summary>
		[ImplementPropertyType("menuTitle")]
		public string MenuTitle
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetMenuTitle(this); }
		}

		///<summary>
		/// Load Content From: Load the content of the selected page transparently with NO URL redirection. This is useful if you want to show the content of another page but still uses the URL of this page.  [umbracoInternalRedirectId]
		///</summary>
		[ImplementPropertyType("umbracoInternalRedirectId")]
		public IPublishedContent UmbracoInternalRedirectId
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetUmbracoInternalRedirectId(this); }
		}

		///<summary>
		/// Hide in Menu: Hide this page from displaying in top menu
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Redirect to Internal Page: Redirects this page temporarily (302) to an internal page.  [umbracoRedirect]
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public IPublishedContent UmbracoRedirect
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetUmbracoRedirect(this); }
		}

		///<summary>
		/// Url Alias: Fill this field if you want to provide with a comma-separated list of {strong}alternate{/strong} URL for this page.  [umbracoUrlAlias]
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetUmbracoUrlAlias(this); }
		}

		///<summary>
		/// Url Name: Fill this field if you want to provide a different url name for this page.  [umbracoUrlName]
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return Umbraco.Web.PublishedContentModels.PageOptions.GetUmbracoUrlName(this); }
		}

		///<summary>
		/// Meta Description: A brief description of the page.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaDescription(this); }
		}

		///<summary>
		/// Meta Keywords: Comma separated list of keywords for search engines
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public string MetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaKeywords(this); }
		}

		///<summary>
		/// Meta Title: This is the text you'll see at the top of your browser
		///</summary>
		[ImplementPropertyType("metaTitle")]
		public string MetaTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaTitle(this); }
		}

		///<summary>
		/// No Follow: Prevents search engine from following links on this page.
		///</summary>
		[ImplementPropertyType("noFollow")]
		public bool NoFollow
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetNoFollow(this); }
		}

		///<summary>
		/// No Index: Prevents search engine from indexing this page.
		///</summary>
		[ImplementPropertyType("noIndex")]
		public bool NoIndex
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetNoIndex(this); }
		}

		///<summary>
		/// OG Image: Image that will be shown on social media when this page is shared.  Recommended size: Width: 1200px Height: 630px  Minimum size: Width: 600px Height: 315px
		///</summary>
		[ImplementPropertyType("ogImage")]
		public IPublishedContent OgImage
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetOgImage(this); }
		}

		///<summary>
		/// OG Label: This is used when the page is shared on social media.
		///</summary>
		[ImplementPropertyType("oGLabel")]
		public Newtonsoft.Json.Linq.JToken OGlabel
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetOGlabel(this); }
		}

		///<summary>
		/// OG Title: The title that will be shown on social media. Limit 40 characters. If empty, the default is Page Title.
		///</summary>
		[ImplementPropertyType("ogTitle")]
		public string OgTitle
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetOgTitle(this); }
		}

		///<summary>
		/// OG Description: A brief description of the page. Limit 300 characters. If empty, the default is "Meta Description".
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetOpenGraphDescription(this); }
		}

		///<summary>
		/// Guide: Scripts Location: Click image to show the scripts location in html.
		///</summary>
		[ImplementPropertyType("guideScriptsLocation")]
		public Newtonsoft.Json.Linq.JToken GuideScriptsLocation
		{
			get { return Umbraco.Web.PublishedContentModels.ThirdPartyScripts.GetGuideScriptsLocation(this); }
		}

		///<summary>
		/// Scripts after "Opening Body" Tag: The scripts that will be inserted after the opening body tag of each page.
		///</summary>
		[ImplementPropertyType("scriptsAfterOpeningBodyTag")]
		public string ScriptsAfterOpeningBodyTag
		{
			get { return Umbraco.Web.PublishedContentModels.ThirdPartyScripts.GetScriptsAfterOpeningBodyTag(this); }
		}

		///<summary>
		/// Scripts after "Opening Head" Tag: The scripts that will be inserted after the opening head tag of each page.
		///</summary>
		[ImplementPropertyType("scriptsAfterOpeningHeadTag")]
		public string ScriptsAfterOpeningHeadTag
		{
			get { return Umbraco.Web.PublishedContentModels.ThirdPartyScripts.GetScriptsAfterOpeningHeadTag(this); }
		}

		///<summary>
		/// Scripts before "Closing Body" Tag: The scripts that will be inserted before the closing body tag of each page.
		///</summary>
		[ImplementPropertyType("scriptsBeforeClosingBodyTag")]
		public string ScriptsBeforeClosingBodyTag
		{
			get { return Umbraco.Web.PublishedContentModels.ThirdPartyScripts.GetScriptsBeforeClosingBodyTag(this); }
		}

		///<summary>
		/// Scripts before "Closing Head" Tag: The scripts that will be inserted before the closing head tag of each page.
		///</summary>
		[ImplementPropertyType("scriptsBeforeClosingHeadTag")]
		public string ScriptsBeforeClosingHeadTag
		{
			get { return Umbraco.Web.PublishedContentModels.ThirdPartyScripts.GetScriptsBeforeClosingHeadTag(this); }
		}
	}
}
